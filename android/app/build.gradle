def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}
def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException('Flutter SDK not found. Define location with flutter.sdk in the local.properties file.')
}

apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.firebase-perf'
apply plugin: 'kotlin-android'

apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"
android {
    namespace "net.yumnmm.eqmonitor"
    compileSdk 33

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId 'net.yumnumm.eqmonitor'
        minSdkVersion 26
        targetSdkVersion 33
        multiDexEnabled true
        versionCode localProperties.getProperty('flutter.versionCode').toInteger()
        versionName localProperties.getProperty('flutter.versionName')
    }
    // 以下を追加
    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword keystoreProperties['storePassword']
        }
    }
    // 追加ここまで

    buildTypes {
        release {
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.release
            minifyEnabled true
            shrinkResources true
            multiDexEnabled true
            versionNameSuffix '.r'
            resValue "string", "app_name", "EQMonitor"
        }
        debug {
            versionNameSuffix '.d'
            resValue "string", "app_name", "EQMonitor (Debug)"
        }
    }
    buildToolsVersion '33.0.0'
    buildFeatures {
        viewBinding true
    }
    namespace 'net.yumnumm.eqmonitor'
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.android.support:multidex:1.0.3'
    // Import the BoM for the Firebase platform
    implementation platform('com.google.firebase:firebase-bom:31.5.0')

    implementation 'com.google.firebase:firebase-crashlytics'
    implementation 'com.google.firebase:firebase-analytics'
    implementation 'com.google.firebase:firebase-perf'
    implementation 'com.google.firebase:firebase-messaging'
    implementation 'com.google.android.material:material:1.9.0-rc01'
    implementation 'androidx.core:core-ktx:1.10.1'
    implementation 'androidx.work:work-runtime-ktx:2.8.1'
    implementation 'androidx.core:core-splashscreen:1.0.1'
    implementation 'androidx.window:window:1.0.0'
    implementation 'androidx.window:window-java:1.0.0'
}

apply plugin: 'com.google.firebase.crashlytics'
