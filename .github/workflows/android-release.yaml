name: Flutter build Android(r)

on:
  push:
    branches: [main, android, feature/v2]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 45

    steps:
      - uses: actions/checkout@v2

      - uses: pocket-apps/action-setup-firebase@v2
        with:
          firebase-token: ${{ secrets.FIREBASE_TOKEN }}

      # https://github.com/kuhnroyal/flutter-fvm-config-action
      - name: Fetch flutter config
        uses: kuhnroyal/flutter-fvm-config-action@v1

      # https://github.com/subosito/flutter-action
      - name: Set up flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: ${{ env.FLUTTER_CHANNEL }}
          cache: true
          cache-key: ${{ env.FLUTTER_VERSION }}-${{ env.FLUTTER_CHANNEL }}

      - name: Flutter version
        run: flutter --version

      - name: Cache pubspec dependencies
        uses: actions/cache@v2
        with:
          path: |
            ${{ env.FLUTTER_HOME }}/.pub-cache
            **/.packages
            **/.flutter-plugins
            **/.flutter-plugin-dependencies
            **/.dart_tool/package_config.json
          key: build-pubspec-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: build-pubspec-

      - name: Cache build runner
        uses: actions/cache@v2
        with:
          path: |
            **/.dart_tool/build
          key: build-runner-${{ hashFiles('**/asset_graph.json') }}-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: build-runner-

      - name: Flutter dependencies install
        run: flutter pub get

      - name: Generate codes with build_runner
        run: |
          echo '${{ secrets.ENV }}' | base64 -d > .env
          flutter pub run build_runner build -d

      - name: Accept Android License
        run: yes | flutter doctor --android-licenses

      - name: Build apk
        run: |
          echo '${{ secrets.SIGNING_KEY }}' | base64 -d > android/app/key.jks
          echo '${{ secrets.FIREBASE_ANDROID }}' | base64 -d > android/app/google-services.json
          export KEYSTORE_PASSWORD='${{ secrets.KEYSTORE_PASSWORD }}'
          export KEY_ALIAS='${{ secrets.KEY_ALIAS }}'
          export KEY_PASSWORD='${{ secrets.KEY_PASSWORD }}'
          flutter build apk --release #--obfuscate --split-debug-info=obfuscate/android
        env:
          SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
          KEY_STORE_PASSWORD: ${{ secrets.KEY_STORE_PASSWORD }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
          ALIAS: ${{ secrets.ALIAS }}
          KEY_PATH: key.jks

      - name: Upload artifact
        uses: actions/upload-artifact@v1.0.0
        with:
          name: release-apk
          path: build/app/outputs/flutter-apk/app-release.apk

      - name: Upload obfuscate
        run: |
          firebase crashlytics:symbols:upload --app=1:179553945248:android:31d2c3e4dcc608f66fabc5 obfuscate/android


      #-- Slack通知 --#
      # 成功
      - name: Slack Notification on Success
        if: ${{ success() }}
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_TITLE: Deploy Success
          SLACK_COLOR: good
          SLACK_ICON: https://raw.githubusercontent.com/EQMonitor/EQMonitor/main/assets/icon.png
          SLACK_USERNAME: EQMonitor
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}

      # 失敗
      - name: Slack Notification on Failure
        if: ${{ failure() }}
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_TITLE: Deploy Failure
          SLACK_COLOR: danger
          SLACK_ICON: https://raw.githubusercontent.com/EQMonitor/EQMonitor/main/assets/icon.png
          SLACK_USERNAME: EQMonitor
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
